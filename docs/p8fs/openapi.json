{
    "openapi": "3.1.0",
    "info": {
        "title": "P8FS API",
        "description": "AI-Native Distributed File System with End-to-End Encryption.",
        "version": "0.1.0"
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Root",
                "description": "Root endpoint with API metadata.",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health/": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "description": "Basic health check endpoint.\n\nReturns:\n    HealthStatus with service status\n\nExample:\n    ```\n    GET /health/\n\n    Response:\n    {\n        \"status\": \"healthy\",\n        \"timestamp\": \"2024-01-15T10:30:00Z\",\n        \"version\": \"0.1.0\",\n        \"services\": {\n            \"tikv\": \"healthy\",\n            \"seaweedfs\": \"healthy\",\n            \"nats\": \"healthy\"\n        }\n    }\n    ```",
                "operationId": "health_check_health__get",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "title": "Timeout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/detailed": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Detailed Health Check",
                "description": "Detailed health check with metrics.\n\nReturns:\n    HealthStatus with detailed metrics",
                "operationId": "detailed_health_check_health_detailed_get",
                "parameters": [
                    {
                        "name": "timeout",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "title": "Timeout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthStatus"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/ping": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Auth Ping",
                "description": "Ping endpoint for authentication testing.\nRequires valid authentication token and raises 401 if invalid.\n\nThis endpoint demonstrates:\n- Required authentication (raises 401 if no valid token)\n- Token validation and payload extraction\n- Authenticated user information",
                "operationId": "auth_ping_api_v1_auth_ping_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Auth Ping Api V1 Auth Ping Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/ping/secure": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Secure Ping",
                "description": "Secure ping endpoint requiring authentication.\n\nThis endpoint demonstrates:\n- Required authentication\n- Token validation\n- Tenant ID extraction",
                "operationId": "secure_ping_api_v1_auth_ping_secure_get",
                "security": [
                    {
                        "HTTPBearer": []
                    },
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Secure Ping Api V1 Auth Ping Secure Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/events": {
            "get": {
                "tags": [
                    "login-events"
                ],
                "summary": "Get Login Events",
                "description": "Get login events for the authenticated tenant.\n\nReturns a list of login events with optional filtering.",
                "operationId": "get_login_events_api_v1_auth_events_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Maximum events to return",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum events to return"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by user ID",
                            "title": "User Id"
                        },
                        "description": "Filter by user ID"
                    },
                    {
                        "name": "device_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by device ID",
                            "title": "Device Id"
                        },
                        "description": "Filter by device ID"
                    },
                    {
                        "name": "success_only",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by success status",
                            "title": "Success Only"
                        },
                        "description": "Filter by success status"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LoginEvent"
                                    },
                                    "title": "Response Get Login Events Api V1 Auth Events Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/events/stats": {
            "get": {
                "tags": [
                    "login-events"
                ],
                "summary": "Get Login Stats",
                "description": "Get login statistics for the authenticated tenant.\n\nReturns aggregated statistics including success rates, auth methods, device types, etc.",
                "operationId": "get_login_stats_api_v1_auth_events_stats_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hours",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 168,
                            "minimum": 1,
                            "description": "Time window in hours",
                            "default": 24,
                            "title": "Hours"
                        },
                        "description": "Time window in hours"
                    },
                    {
                        "name": "x-tenant-id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Tenant-Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Login Stats Api V1 Auth Events Stats Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/events/health": {
            "get": {
                "tags": [
                    "login-events"
                ],
                "summary": "Login Events Health",
                "description": "Login events API health check.\n\nReturns:\n    Health status",
                "operationId": "login_events_health_api_v1_auth_events_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Login Events Health Api V1 Auth Events Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/authorize": {
            "get": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Authorization Endpoint",
                "description": "OAuth 2.1 Authorization Endpoint.\n\nInitiates authorization code flow with mandatory PKCE.\nNo implicit grant support (removed in OAuth 2.1).",
                "operationId": "authorization_endpoint_oauth_authorize_get",
                "parameters": [
                    {
                        "name": "response_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Must be 'code'",
                            "title": "Response Type"
                        },
                        "description": "Must be 'code'"
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "OAuth client identifier",
                            "title": "Client Id"
                        },
                        "description": "OAuth client identifier"
                    },
                    {
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Callback URL",
                            "title": "Redirect Uri"
                        },
                        "description": "Callback URL"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "CSRF protection state",
                            "title": "State"
                        },
                        "description": "CSRF protection state"
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Space-delimited scopes",
                            "title": "Scope"
                        },
                        "description": "Space-delimited scopes"
                    },
                    {
                        "name": "code_challenge",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "PKCE challenge (required)",
                            "title": "Code Challenge"
                        },
                        "description": "PKCE challenge (required)"
                    },
                    {
                        "name": "code_challenge_method",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Must be S256",
                            "default": "S256",
                            "title": "Code Challenge Method"
                        },
                        "description": "Must be S256"
                    },
                    {
                        "name": "nonce",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "OpenID Connect nonce",
                            "title": "Nonce"
                        },
                        "description": "OpenID Connect nonce"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Token Endpoint",
                "description": "OAuth 2.1 Token Endpoint.\n\nExchanges authorization code, refresh token, or device code for tokens.\nPKCE is required for authorization code grant.",
                "operationId": "token_endpoint_oauth_token_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_token_endpoint_oauth_token_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/revoke": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Revoke Token",
                "description": "OAuth 2.1 Token Revocation.\n\nRevokes access or refresh token.\nAlways returns 200 OK for security.\nRFC 7009: https://datatracker.ietf.org/doc/html/rfc7009",
                "operationId": "revoke_token_oauth_revoke_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_revoke_token_oauth_revoke_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/introspect": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Introspect Token",
                "description": "OAuth 2.1 Token Introspection.\n\nReturns token metadata and validity.\nRFC 7662: https://datatracker.ietf.org/doc/html/rfc7662",
                "operationId": "introspect_token_oauth_introspect_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_introspect_token_oauth_introspect_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Introspect Token Oauth Introspect Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/userinfo": {
            "get": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Userinfo Endpoint",
                "description": "OpenID Connect UserInfo Endpoint.\n\nReturns claims about authenticated user.\nRequires valid access token with openid scope.",
                "operationId": "userinfo_endpoint_oauth_userinfo_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Userinfo Endpoint Oauth Userinfo Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/oauth/device/code": {
            "post": {
                "summary": "Test Device Code",
                "description": "Test device code endpoint - HARDCODED FOR DEBUGGING",
                "operationId": "test_device_code_oauth_device_code_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/oauth/device/approve": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Approve Device Authorization",
                "description": "Device Approval Endpoint (Mobile).\n\nMobile device approves desktop pairing request using user code from QR/deep link.\nDevice code is optional and will be looked up from user_code if not provided.\n\nAuthentication options:\n1. JWT token + Ed25519 signature (standard mobile flow)\n2. Temporary API key (testing/development flow)\n\nFor JWT flow: Requires Ed25519 signature for authentication.\nMobile device must provide valid JWT token to transfer its identity to the approved device.\n\nFor API key flow: Use temporary API key generated via /device/api-key endpoint.",
                "operationId": "approve_device_authorization_oauth_device_approve_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_approve_device_authorization_oauth_device_approve_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/oauth/device/api-key": {
            "post": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Generate Device Api Key",
                "description": "Generate Temporary API Key for Device Approval.\n\nGenerates a one-time API key that can be used instead of mobile approval.\nThe API key expires in 15 minutes and can only be used once.\nThis is intended for testing/development scenarios where mobile approval\nmay not be convenient.\n\nArgs:\n    user_code: User code from device registration (XXXX-XXXX format)\n    mobile_user: Authenticated mobile user\n    \nReturns:\n    Dict containing the temporary API key",
                "operationId": "generate_device_api_key_oauth_device_api_key_post",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_generate_device_api_key_oauth_device_api_key_post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Generate Device Api Key Oauth Device Api Key Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/oauth/device": {
            "get": {
                "tags": [
                    "oauth2"
                ],
                "summary": "Device Verification Page",
                "description": "Device Verification Page.\n\nReturns device details for mobile app to display including device metadata.\nUser code is required - returns 422 Unprocessable Entity if missing.\nThis follows OAuth 2.1 Device Authorization Grant RFC 8628.",
                "operationId": "device_verification_page_oauth_device_get",
                "parameters": [
                    {
                        "name": "user_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "User code from QR - required parameter",
                            "title": "User Code"
                        },
                        "description": "User code from QR - required parameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Device Verification Page Oauth Device Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/debug/deployment": {
            "get": {
                "summary": "Debug Deployment",
                "description": "Debug endpoint to verify latest deployment",
                "operationId": "debug_deployment_debug_deployment_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/oauth-authorization-server": {
            "get": {
                "summary": "Oauth Metadata",
                "description": "OAuth 2.1 Authorization Server Metadata",
                "operationId": "oauth_metadata__well_known_oauth_authorization_server_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/jwks.json": {
            "get": {
                "summary": "Jwks Endpoint",
                "description": "JSON Web Key Set Endpoint",
                "operationId": "jwks_endpoint__well_known_jwks_json_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Register Device",
                "description": "Register new mobile device.\n\nInitiates mobile device registration with email verification.\nStores Ed25519 public key for device authentication.\n\nReturns:\n    Registration ID and verification instructions",
                "operationId": "register_device_api_v1_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Register Device Api V1 Auth Register Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/verify": {
            "post": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Verify Registration",
                "description": "Verify email and complete registration.\n\nCompletes mobile device registration after email verification.\nReturns OAuth 2.1 tokens for authenticated device.\n\nReturns:\n    Access and refresh tokens",
                "operationId": "verify_registration_api_v1_auth_verify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/keypair/rotate": {
            "post": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Rotate Keypair",
                "description": "Rotate device keypair.\n\nAllows device to rotate its Ed25519 keypair.\nOld key must sign the rotation request.\n\nReturns:\n    Success response",
                "operationId": "rotate_keypair_api_v1_auth_keypair_rotate_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "new_public_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "New Ed25519 public key",
                            "title": "New Public Key"
                        },
                        "description": "New Ed25519 public key"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Signature with old key",
                            "title": "Signature"
                        },
                        "description": "Signature with old key"
                    },
                    {
                        "name": "device-id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Device ID",
                            "title": "Device-Id"
                        },
                        "description": "Device ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Rotate Keypair Api V1 Auth Keypair Rotate Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/devices": {
            "get": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "List Devices",
                "description": "List all devices for tenant.\n\nReturns list of registered devices with metadata.\n\nReturns:\n    List of device information",
                "operationId": "list_devices_api_v1_auth_devices_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/DeviceInfo"
                                    },
                                    "type": "array",
                                    "title": "Response List Devices Api V1 Auth Devices Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/devices/{device_id}": {
            "delete": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Revoke Device",
                "description": "Revoke device access.\n\nImmediately revokes all tokens for specified device.\nDevice must re-register to regain access.\n\nReturns:\n    Success response",
                "operationId": "revoke_device_api_v1_auth_devices__device_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Device Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Revoke Device Api V1 Auth Devices  Device Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/email/add": {
            "post": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Add Email",
                "description": "Add email to account.\n\nInitiates email verification for additional email address.\n\nReturns:\n    Verification initiation response",
                "operationId": "add_email_api_v1_auth_email_add_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailVerificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Add Email Api V1 Auth Email Add Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/auth/email/verify": {
            "post": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Verify Additional Email",
                "description": "Verify additional email.\n\nCompletes verification of additional email address.\n\nReturns:\n    Success response",
                "operationId": "verify_additional_email_api_v1_auth_email_verify_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Email to verify",
                            "title": "Email"
                        },
                        "description": "Email to verify"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "6-digit verification code",
                            "title": "Code"
                        },
                        "description": "6-digit verification code"
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Ed25519 signature",
                            "title": "Signature"
                        },
                        "description": "Ed25519 signature"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Verify Additional Email Api V1 Auth Email Verify Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/health": {
            "get": {
                "tags": [
                    "mobile-auth"
                ],
                "summary": "Mobile Health",
                "description": "Mobile API health check.\n\nReturns:\n    Health status",
                "operationId": "mobile_health_api_v1_auth_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Mobile Health Api V1 Auth Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/qr/create": {
            "post": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Create Qr Session",
                "description": "Create QR code session for desktop pairing.\n\nDesktop initiates pairing by creating a QR session.\nReturns QR data to be encoded and displayed for mobile scanning.\n\nReturns:\n    QR code data with session ID and public key",
                "operationId": "create_qr_session_api_v1_device_qr_create_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QRSessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QRCodeData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/qr/scan": {
            "post": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Process Qr Scan",
                "description": "Process QR code scan from mobile device.\n\nMobile app scans QR code and establishes encrypted channel\nwith desktop using X25519 key exchange.\n\nReturns:\n    Encrypted pairing response for mobile",
                "operationId": "process_qr_scan_api_v1_device_qr_scan_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QRScanRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Process Qr Scan Api V1 Device Qr Scan Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/device/session/{device_code}/status": {
            "get": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Get Session Status",
                "description": "Get device session status.\n\nDesktop polls this endpoint to check pairing status.\nReturns current status and remaining time.\n\nReturns:\n    Session status and metadata",
                "operationId": "get_session_status_api_v1_device_session__device_code__status_get",
                "parameters": [
                    {
                        "name": "device_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Device Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Session Status Api V1 Device Session  Device Code  Status Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/approve/{user_code}": {
            "get": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Get Approval Info",
                "description": "Get pairing approval information.\n\nMobile app calls this to get device info before approval.\nShows desktop device name and type to user.\n\nReturns:\n    Device information for approval decision",
                "operationId": "get_approval_info_api_v1_device_approve__user_code__get",
                "parameters": [
                    {
                        "name": "user_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Approval Info Api V1 Device Approve  User Code  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Approve Pairing",
                "description": "Approve desktop pairing.\n\nMobile user approves desktop device pairing.\nLinks desktop session to mobile tenant.\n\nReturns:\n    Approval confirmation",
                "operationId": "approve_pairing_api_v1_device_approve__user_code__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Code"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApprovalRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Approve Pairing Api V1 Device Approve  User Code  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/reject/{user_code}": {
            "post": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Reject Pairing",
                "description": "Reject desktop pairing.\n\nMobile user rejects desktop device pairing.\nTerminates the pairing session.\n\nReturns:\n    Rejection confirmation",
                "operationId": "reject_pairing_api_v1_device_reject__user_code__post",
                "parameters": [
                    {
                        "name": "user_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Reject Pairing Api V1 Device Reject  User Code  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/credentials/{device_code}": {
            "get": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Get Encrypted Credentials",
                "description": "Get encrypted S3 credentials.\n\nAfter successful pairing, desktop retrieves encrypted\nS3 credentials using the established shared secret.\n\nReturns:\n    Encrypted credentials for S3 access",
                "operationId": "get_encrypted_credentials_api_v1_device_credentials__device_code__get",
                "parameters": [
                    {
                        "name": "device_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Device Code"
                        }
                    },
                    {
                        "name": "s3_access_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "S3 access key",
                            "title": "S3 Access Key"
                        },
                        "description": "S3 access key"
                    },
                    {
                        "name": "s3_secret_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "S3 secret key",
                            "title": "S3 Secret Key"
                        },
                        "description": "S3 secret key"
                    },
                    {
                        "name": "s3_session_token",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "S3 session token",
                            "title": "S3 Session Token"
                        },
                        "description": "S3 session token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Get Encrypted Credentials Api V1 Device Credentials  Device Code  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/device/health": {
            "get": {
                "tags": [
                    "device-auth"
                ],
                "summary": "Device Health",
                "description": "Device API health check.\n\nReturns:\n    Health status",
                "operationId": "device_health_api_v1_device_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Device Health Api V1 Device Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/sessions": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "List Sessions",
                "description": "List credential sessions for tenant.\n\nReturns all active and expired sessions.\nUsed for session management and audit.\n\nReturns:\n    List of credential sessions",
                "operationId": "list_sessions_api_v1_credentials_sessions_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response List Sessions Api V1 Credentials Sessions Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Create Session",
                "description": "Create credential derivation session.\n\nInitiates a session for deriving S3 credentials.\nSession provides secure context for HKDF derivation.\n\nReturns:\n    Created credential session",
                "operationId": "create_session_api_v1_credentials_sessions_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CredentialSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/credentials/derive": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Derive Credentials",
                "description": "Derive S3 credentials using HKDF.\n\nGenerates deterministic S3 credentials from session context.\nNo credentials are stored - all derived on-demand.\n\nReturns:\n    S3 credentials (access key, secret key, session token)",
                "operationId": "derive_credentials_api_v1_credentials_derive_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CredentialRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3Credentials"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/validate": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Validate Credentials",
                "description": "Validate S3 credentials.\n\nVerifies credentials by re-deriving and comparing.\nUsed by SeaweedFS webhook for authentication.\n\nReturns:\n    Validation result with metadata",
                "operationId": "validate_credentials_api_v1_credentials_validate_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Validate Credentials Api V1 Credentials Validate Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/sessions/{session_id}/revoke": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Revoke Session",
                "description": "Revoke credential session.\n\nImmediately invalidates session and all derived credentials.\nForces re-authentication for new credentials.\n\nReturns:\n    Revocation confirmation",
                "operationId": "revoke_session_api_v1_credentials_sessions__session_id__revoke_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Session Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Revoke Session Api V1 Credentials Sessions  Session Id  Revoke Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/sessions/{session_id}/rotate": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Rotate Credentials",
                "description": "Rotate credentials for session.\n\nCreates new session and derives fresh credentials.\nRevokes old session for security.\n\nReturns:\n    New S3 credentials",
                "operationId": "rotate_credentials_api_v1_credentials_sessions__session_id__rotate_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Session Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3Credentials"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/buckets/{bucket_name}/policy": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Get Bucket Policy",
                "description": "Get S3 bucket policy for tenant.\n\nGenerates IAM policy for tenant-scoped bucket access.\nUsed for SeaweedFS bucket configuration.\n\nReturns:\n    S3 bucket policy JSON",
                "operationId": "get_bucket_policy_api_v1_credentials_buckets__bucket_name__policy_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "bucket_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Bucket Name"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Bucket Policy Api V1 Credentials Buckets  Bucket Name  Policy Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/derive-quick": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Derive Quick Credentials",
                "description": "Quick credential derivation.\n\nCreates session and derives credentials in one call.\nConvenient for simple use cases.\n\nReturns:\n    S3 credentials",
                "operationId": "derive_quick_credentials_api_v1_credentials_derive_quick_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Device ID",
                            "title": "Device Id"
                        },
                        "description": "Device ID"
                    },
                    {
                        "name": "bucket_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Optional bucket name",
                            "title": "Bucket Name"
                        },
                        "description": "Optional bucket name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3Credentials"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/s3": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Get S3 Credentials",
                "description": "Get S3 credentials directly (authentication.md specification).\n\nIf authenticated, returns tenant-specific credentials.\nOtherwise, returns default cluster S3 credentials for initial access.",
                "operationId": "get_s3_credentials_api_v1_credentials_s3_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "device_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Device identifier",
                            "title": "Device Id"
                        },
                        "description": "Device identifier"
                    },
                    {
                        "name": "bucket_name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Specific bucket name",
                            "title": "Bucket Name"
                        },
                        "description": "Specific bucket name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3Credentials"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/credentials/api": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Get Api Credentials",
                "description": "Get API key credentials (authentication.md specification).\n\nReturns API key for direct API access.",
                "operationId": "get_api_credentials_api_v1_credentials_api_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Get Api Credentials Api V1 Credentials Api Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/credentials/rotate": {
            "post": {
                "tags": [
                    "credentials"
                ],
                "summary": "Rotate Credentials",
                "description": "Force global credential rotation (authentication.md specification).\n\nInvalidates all existing sessions and forces regeneration.",
                "operationId": "rotate_credentials_api_v1_credentials_rotate_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Rotate Credentials Api V1 Credentials Rotate Post"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/credentials/health": {
            "get": {
                "tags": [
                    "credentials"
                ],
                "summary": "Credential Health",
                "description": "Credential API health check.\n\nReturns:\n    Health status",
                "operationId": "credential_health_api_v1_credentials_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Credential Health Api V1 Credentials Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/s3/validate": {
            "post": {
                "tags": [
                    "internal"
                ],
                "summary": "Validate S3 Request",
                "description": "SeaweedFS S3 validation webhook.\n\nRe-derives S3 credentials and validates the request signature.\nImplements zero-credential storage principle.",
                "operationId": "validate_s3_request_internal_s3_validate_post",
                "parameters": [
                    {
                        "name": "X-SeaweedFS-Secret",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Seaweedfs-Secret"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/S3ValidationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/S3ValidationResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/webhooks/seaweedfs": {
            "post": {
                "tags": [
                    "internal"
                ],
                "summary": "Seaweedfs Notification",
                "description": "SeaweedFS file event notification webhook.\n\nHandles file events from SeaweedFS for audit logging,\nmetadata indexing, and workflow triggers.",
                "operationId": "seaweedfs_notification_internal_webhooks_seaweedfs_post",
                "parameters": [
                    {
                        "name": "X-SeaweedFS-Secret",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "X-Seaweedfs-Secret"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeaweedFSEvent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response Seaweedfs Notification Internal Webhooks Seaweedfs Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/health": {
            "get": {
                "tags": [
                    "internal"
                ],
                "summary": "Internal Health",
                "description": "Internal health check endpoint.",
                "operationId": "internal_health_internal_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Internal Health Internal Health Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/debug/usercode/{user_code}": {
            "get": {
                "tags": [
                    "internal"
                ],
                "summary": "Debug Get Device Code",
                "description": "Debug endpoint to get device_code from user_code.\nOnly available in debug mode.",
                "operationId": "debug_get_device_code_internal_debug_usercode__user_code__get",
                "parameters": [
                    {
                        "name": "user_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "User Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Debug Get Device Code Internal Debug Usercode  User Code  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/chat/completions": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "Chat Completions",
                "description": "OpenAI-compatible chat completions endpoint.\n\nSimple model-free memory proxy relay to LLM APIs. If X-P8-Agent header\nis provided, routes to the specified agent controller for that agent.\n\nHeaders:\n    X-P8-Agent: Optional agent name to route to specific agent controller\n    X-Chat-Is-Audio: If \"true\", first user message contains base64 audio to transcribe\n\nExamples:\n    # Standard LLM relay\n    POST /v1/chat/completions\n\n    # Route to specific agent via header\n    POST /v1/chat/completions\n    X-P8-Agent: p8-research\n\n    # With audio input\n    POST /v1/chat/completions\n    X-Chat-Is-Audio: true",
                "operationId": "chat_completions_api_v1_chat_completions_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "X-P8-Agent",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-P8-Agent"
                        }
                    },
                    {
                        "name": "X-Chat-Is-Audio",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Chat-Is-Audio"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/agent/{agent_key}/chat/completions": {
            "post": {
                "tags": [
                    "chat"
                ],
                "summary": "Agent Chat Completions",
                "description": "Agent-specific chat completions endpoint.\n\nRoutes to agent controller with memory proxy for that specific agent.\nSupports tool calls, function calling, and agent-specific behaviors.\n\nSpecial case: agent_key=\"p8-sim\" triggers simulation mode that generates\ntest responses instead of calling real LLMs.\n\nPath Parameters:\n    agent_key: Agent name (e.g., \"p8-research\", \"p8-analysis\", \"p8-sim\")\n\nHeaders:\n    X-Chat-Is-Audio: If \"true\", first user message contains base64 audio to transcribe\n\nExamples:\n    # Research agent with function calling\n    POST /v1/agent/p8-research/chat/completions\n\n    # Simulation mode for testing\n    POST /v1/agent/p8-sim/chat/completions",
                "operationId": "agent_chat_completions_api_v1_agent__agent_key__chat_completions_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Agent Key"
                        }
                    },
                    {
                        "name": "X-Chat-Is-Audio",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Chat-Is-Audio"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatCompletionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/kv/{key}": {
            "put": {
                "tags": [
                    "kv"
                ],
                "summary": "Store Key Value",
                "description": "Store a key-value pair using Repository pattern.\n\nArgs:\n    key: The key to store\n    request: KV request payload\n    current_user: Authenticated user token\n    storage_service: Storage service instance\n\nReturns:\n    KVResponse with operation details\n\nRaises:\n    HTTPException: If storage operation fails\n\nExample:\n    ```\n    PUT /api/v1/kv/user:123\n    {\n        \"value\": {\"name\": \"Alice\", \"age\": 30},\n        \"metadata\": {\"source\": \"user_profile\"},\n        \"ttl\": 3600,\n        \"tags\": [\"user\", \"profile\"]\n    }\n    ```",
                "operationId": "store_key_value_api_v1_kv__key__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Key to store",
                            "title": "Key"
                        },
                        "description": "Key to store"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KVRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "kv"
                ],
                "summary": "Get Key Value",
                "description": "Retrieve a value by key using Repository pattern.\n\nArgs:\n    key: The key to retrieve\n    current_user: Authenticated user token\n    storage_service: Storage service instance\n\nReturns:\n    KVData containing the value and metadata\n\nRaises:\n    HTTPException: If key not found or access denied\n\nExample:\n    ```\n    GET /api/v1/kv/user:123\n\n    Response:\n    {\n        \"key\": \"user:123\",\n        \"value\": {\"name\": \"Alice\", \"age\": 30},\n        \"version\": 1,\n        \"size_bytes\": 45,\n        \"encrypted\": true,\n        \"created_at\": \"2024-01-15T10:30:00Z\",\n        \"metadata\": {\"source\": \"user_profile\"},\n        \"tags\": [\"user\", \"profile\"]\n    }\n    ```",
                "operationId": "get_key_value_api_v1_kv__key__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Key to retrieve",
                            "title": "Key"
                        },
                        "description": "Key to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KVData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "kv"
                ],
                "summary": "Delete Key Value",
                "description": "Delete a key-value pair using Repository pattern.\n\nArgs:\n    key: The key to delete\n    current_user: Authenticated user token\n    storage_service: Storage service instance\n\nReturns:\n    Success response\n\nRaises:\n    HTTPException: If key not found or deletion fails",
                "operationId": "delete_key_value_api_v1_kv__key__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Key to delete",
                            "title": "Key"
                        },
                        "description": "Key to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/kv/": {
            "get": {
                "tags": [
                    "kv"
                ],
                "summary": "List Keys",
                "description": "List keys with optional filtering using Repository pattern.\n\nArgs:\n    prefix: Filter by key prefix\n    limit: Maximum number of results\n    current_user: Authenticated user token\n    storage_service: Storage service instance\n\nReturns:\n    KVListResponse with matching keys\n\nExample:\n    ```\n    GET /api/v1/kv/?prefix=user:&limit=20\n\n    Response:\n    {\n        \"keys\": [\n            {\n                \"key\": \"user:123\",\n                \"version\": 1,\n                \"size_bytes\": 45,\n                \"encrypted\": true,\n                \"created_at\": \"2024-01-15T10:30:00Z\"\n            }\n        ],\n        \"total\": 5,\n        \"has_more\": false,\n        \"cursor\": null\n    }\n    ```",
                "operationId": "list_keys_api_v1_kv__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "prefix",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Key prefix filter",
                            "title": "Prefix"
                        },
                        "description": "Key prefix filter"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Maximum results",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum results"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KVListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/kv/bulk": {
            "post": {
                "tags": [
                    "kv"
                ],
                "summary": "Bulk Operations",
                "description": "Perform bulk key-value operations using Repository pattern.\n\nArgs:\n    request: Bulk operations request\n    current_user: Authenticated user token\n    storage_service: Storage service instance\n\nReturns:\n    KVBulkResponse with operation results\n\nExample:\n    ```\n    POST /api/v1/kv/bulk\n    {\n        \"operations\": [\n            {\n                \"action\": \"put\",\n                \"key\": \"user:123\",\n                \"value\": {\"name\": \"Alice\"}\n            },\n            {\n                \"action\": \"delete\", \n                \"key\": \"user:456\"\n            }\n        ],\n        \"atomic\": false\n    }\n    ```",
                "operationId": "bulk_operations_api_v1_kv_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/KVBulkRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/KVBulkResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/tikv/{tenant_id}": {
            "get": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Get Key",
                "description": "Get value by key from TiKV\n\nArgs:\n    tenant_id: Tenant identifier\n    key: Key to retrieve (as query parameter)\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse with the value or error",
                "operationId": "get_key_api_v1_tikv__tenant_id__get",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Put Key",
                "description": "Put key-value pair to TiKV\n\nArgs:\n    tenant_id: Tenant identifier\n    key: Key to store (as query parameter)\n    request: Value to store\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse indicating success or failure",
                "operationId": "put_key_api_v1_tikv__tenant_id__put",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiKVPutRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Delete Key",
                "description": "Delete key from TiKV\n\nArgs:\n    tenant_id: Tenant identifier\n    key: Key to delete (as query parameter)\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse indicating success or failure",
                "operationId": "delete_key_api_v1_tikv__tenant_id__delete",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tikv/{tenant_id}/scan": {
            "post": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Scan Keys",
                "description": "Scan keys with prefix from TiKV\n\nArgs:\n    tenant_id: Tenant identifier\n    request: Scan parameters (prefix, limit)\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse with list of key-value pairs",
                "operationId": "scan_keys_api_v1_tikv__tenant_id__scan_post",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiKVScanRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tikv/{tenant_id}/batch": {
            "post": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Batch Operations",
                "description": "Perform batch TiKV operations\n\nArgs:\n    tenant_id: Tenant identifier\n    request: List of operations to perform\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse with results for each operation",
                "operationId": "batch_operations_api_v1_tikv__tenant_id__batch_post",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TiKVBatchRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tikv/{tenant_id}/health": {
            "get": {
                "tags": [
                    "tikv-proxy",
                    "tikv-proxy"
                ],
                "summary": "Health Check",
                "description": "Health check for TiKV connectivity\n\nArgs:\n    tenant_id: Tenant identifier\n    admin_token: Admin bearer token\n    \nReturns:\n    TiKVResponse with health status",
                "operationId": "health_check_api_v1_tikv__tenant_id__health_get",
                "security": [
                    {
                        "Admin Bearer Token": []
                    }
                ],
                "parameters": [
                    {
                        "name": "tenant_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Tenant Id"
                        }
                    },
                    {
                        "name": "authorization",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Authorization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TiKVResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/entities/": {
            "get": {
                "tags": [
                    "entities"
                ],
                "summary": "List Schemas",
                "description": "List available entity schemas from registered entities.",
                "operationId": "list_schemas_api_v1_entities__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response List Schemas Api V1 Entities  Get"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "entities"
                ],
                "summary": "Create Entity",
                "description": "Create or update an entity using Repository pattern with AbstractModel.",
                "operationId": "create_entity_api_v1_entities__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/entities/{entity_id}": {
            "get": {
                "tags": [
                    "entities"
                ],
                "summary": "Get Entity",
                "description": "Retrieve an entity by ID and schema using Repository pattern.",
                "operationId": "get_entity_api_v1_entities__entity_id__get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity ID to retrieve",
                            "title": "Entity Id"
                        },
                        "description": "Entity ID to retrieve"
                    },
                    {
                        "name": "schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity schema type",
                            "title": "Schema"
                        },
                        "description": "Entity schema type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "entities"
                ],
                "summary": "Update Entity",
                "description": "Update an existing entity using Repository pattern.",
                "operationId": "update_entity_api_v1_entities__entity_id__put",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity ID to update",
                            "title": "Entity Id"
                        },
                        "description": "Entity ID to update"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "entities"
                ],
                "summary": "Delete Entity",
                "description": "Delete an entity using Repository pattern.",
                "operationId": "delete_entity_api_v1_entities__entity_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "entity_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity ID to delete",
                            "title": "Entity Id"
                        },
                        "description": "Entity ID to delete"
                    },
                    {
                        "name": "schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Entity schema type",
                            "title": "Schema"
                        },
                        "description": "Entity schema type"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Delete Entity Api V1 Entities  Entity Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/entities/search": {
            "post": {
                "tags": [
                    "entities"
                ],
                "summary": "Search Entities",
                "description": "Search entities using DataFusion query engine with tenant isolation.",
                "operationId": "search_entities_api_v1_entities_search_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchEntitiesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "additionalProperties": true,
                                        "type": "object"
                                    },
                                    "type": "array",
                                    "title": "Response Search Entities Api V1 Entities Search Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/query/sql": {
            "post": {
                "tags": [
                    "query"
                ],
                "summary": "Execute Sql Query",
                "description": "Execute SQL query using DataFusion with tenant isolation.\n\nSupports:\n- p8.KV syntax for key-value queries\n- TiDB vector functions (VEC_COSINE_DISTANCE, etc.)\n- Graph traversal queries\n- Standard SQL operations\n\nArgs:\n    request: SQL query request\n    current_user: Authenticated user (provides tenant isolation)\n    session: DataFusion session for tenant\n    \nReturns:\n    Query results in requested format\n    \nExample:\n    ```\n    POST /api/v1/query/sql\n    {\n        \"sql\": \"SELECT * FROM p8.KV WHERE key LIKE 'user:%' LIMIT 10\",\n        \"format\": \"json\"\n    }\n    ```",
                "operationId": "execute_sql_query_api_v1_query_sql_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SQLQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryResultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/query/vector-search": {
            "post": {
                "tags": [
                    "query"
                ],
                "summary": "Vector Search Query",
                "description": "Execute vector similarity search using TiDB native vector functions.\n\nArgs:\n    query_vector: Query vector for similarity search\n    table: Table name for search\n    limit: Maximum results\n    threshold: Similarity threshold\n    current_user: Authenticated user (provides tenant isolation)\n    session: DataFusion session for tenant\n    \nReturns:\n    Vector search results with similarity scores\n    \nExample:\n    ```\n    POST /api/v1/query/vector-search?table=document_embeddings&limit=5&threshold=0.7\n    [0.1, 0.2, 0.3, ...]  # 384-dimensional vector\n    ```",
                "operationId": "vector_search_query_api_v1_query_vector_search_post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "query_vector",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "description": "Query vector for similarity search",
                            "title": "Query Vector"
                        },
                        "description": "Query vector for similarity search"
                    },
                    {
                        "name": "table",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Table to search (e.g., 'document_embeddings')",
                            "title": "Table"
                        },
                        "description": "Table to search (e.g., 'document_embeddings')"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum results",
                            "default": 10,
                            "title": "Limit"
                        },
                        "description": "Maximum results"
                    },
                    {
                        "name": "threshold",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "maximum": 1.0,
                            "minimum": 0.0,
                            "description": "Similarity threshold",
                            "default": 0.0,
                            "title": "Threshold"
                        },
                        "description": "Similarity threshold"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Vector Search Query Api V1 Query Vector Search Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/query/hybrid": {
            "post": {
                "tags": [
                    "query"
                ],
                "summary": "Execute Hybrid Query",
                "description": "Execute hybrid query combining KV, SQL, and vector search.\n\nArgs:\n    request: Hybrid query request\n    current_user: Authenticated user (provides tenant isolation)\n    session: DataFusion session for tenant\n    \nReturns:\n    Combined query results\n    \nExample:\n    ```\n    POST /api/v1/query/hybrid\n    {\n        \"base_sql\": \"SELECT * FROM p8.KV WHERE value.category = 'document'\",\n        \"vector_query\": \"SELECT id, similarity FROM test.document_embeddings WHERE similarity > 0.8\",\n        \"vector_params\": {\n            \"query_vector\": [0.1, 0.2, ...],\n            \"threshold\": 0.8\n        }\n    }\n    ```",
                "operationId": "execute_hybrid_query_api_v1_query_hybrid_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HybridQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QueryResultResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/api/v1/query/kv": {
            "get": {
                "tags": [
                    "query"
                ],
                "summary": "Query Kv Data",
                "description": "Query KV data using DataFusion with simplified syntax.\n\nArgs:\n    key_pattern: Key pattern filter\n    value_filter: JSONPath filter for values  \n    limit: Maximum results\n    current_user: Authenticated user (provides tenant isolation)\n    session: DataFusion session for tenant\n    \nReturns:\n    KV query results\n    \nExample:\n    ```\n    GET /api/v1/query/kv?key_pattern=user:%&value_filter=$.age>25&limit=20\n    ```",
                "operationId": "query_kv_data_api_v1_query_kv_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "key_pattern",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Key pattern filter (e.g., 'user:%')",
                            "title": "Key Pattern"
                        },
                        "description": "Key pattern filter (e.g., 'user:%')"
                    },
                    {
                        "name": "value_filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "JSONPath filter for values",
                            "title": "Value Filter"
                        },
                        "description": "JSONPath filter for values"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Maximum results",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum results"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Query Kv Data Api V1 Query Kv Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tus/": {
            "post": {
                "tags": [
                    "tus"
                ],
                "summary": "Create upload session",
                "description": "Create a new TUS upload session for resumable file uploads",
                "operationId": "create_upload_tus__post",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Upload Length"
                        }
                    },
                    {
                        "name": "upload_metadata",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Upload Metadata"
                        }
                    },
                    {
                        "name": "upload_defer_length",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Upload Defer Length"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SeaweedFSConfig"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Config"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TUSResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "options": {
                "tags": [
                    "tus"
                ],
                "summary": "TUS server info",
                "description": "Get TUS server capabilities and configuration",
                "operationId": "tus_options_tus__options",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/tus/{upload_id}": {
            "head": {
                "tags": [
                    "tus"
                ],
                "summary": "Get upload info",
                "description": "Get current upload status and offset",
                "operationId": "get_upload_info_tus__upload_id__head",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Upload Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SeaweedFSConfig"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Config"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "tus"
                ],
                "summary": "Upload chunk",
                "description": "Upload a chunk of data to an existing upload session",
                "operationId": "upload_chunk_tus__upload_id__patch",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Upload Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SeaweedFSConfig"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Config"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "tus"
                ],
                "summary": "Delete upload",
                "description": "Delete an upload session and any associated data",
                "operationId": "delete_upload_tus__upload_id__delete",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Upload Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SeaweedFSConfig"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Config"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tus/{upload_id}/status": {
            "get": {
                "tags": [
                    "tus"
                ],
                "summary": "Get upload status",
                "description": "Get detailed upload status information",
                "operationId": "get_upload_status_tus__upload_id__status_get",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "upload_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Upload Id"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/SeaweedFSConfig"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "title": "Config"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TUSFileInfo"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/metrics/query/{query_type}": {
            "get": {
                "tags": [
                    "metrics"
                ],
                "summary": "Query Metrics",
                "description": "Query metrics for chat/API consumption.\n\nAvailable query types:\n- health: Overall system health\n- errors: Error rates and counts\n- performance: Response times and throughput\n- storage: Storage usage and capacity\n- alerts: Active alerts\n- summary: Overall system summary",
                "operationId": "query_metrics_metrics_query__query_type__get",
                "parameters": [
                    {
                        "name": "query_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Query Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Query Metrics Metrics Query  Query Type  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health/metrics": {
            "get": {
                "tags": [
                    "metrics"
                ],
                "summary": "Health With Metrics",
                "description": "Enhanced health endpoint with key metrics.",
                "operationId": "health_with_metrics_health_metrics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Health With Metrics Health Metrics Get"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApprovalRequest": {
                "properties": {
                    "mobile_signature": {
                        "type": "string",
                        "title": "Mobile Signature"
                    }
                },
                "type": "object",
                "required": [
                    "mobile_signature"
                ],
                "title": "ApprovalRequest",
                "description": "Pairing approval request."
            },
            "Body_approve_device_authorization_oauth_device_approve_post": {
                "properties": {
                    "user_code": {
                        "type": "string",
                        "title": "User Code",
                        "description": "User code from QR/deep link (e.g., 3348-5422)"
                    },
                    "signature": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Signature",
                        "description": "Ed25519 signature from mobile (required if api_key not provided)"
                    },
                    "api_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Api Key",
                        "description": "Temporary API key for approval (alternative to signature)"
                    },
                    "device_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Code",
                        "description": "Device code (optional, will be looked up from user_code)"
                    },
                    "encrypted_metadata": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Encrypted Metadata",
                        "description": "Encrypted device metadata"
                    }
                },
                "type": "object",
                "required": [
                    "user_code"
                ],
                "title": "Body_approve_device_authorization_oauth_device_approve_post"
            },
            "Body_device_authorization_oauth_device_code_post": {
                "properties": {
                    "client_id": {
                        "type": "string",
                        "title": "Client Id",
                        "description": "OAuth client ID"
                    },
                    "scope": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scope",
                        "description": "Requested scopes"
                    },
                    "device_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Name",
                        "description": "Human-readable device name (e.g., 'John's MacBook Pro')"
                    },
                    "device_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Type",
                        "description": "Device type (e.g., 'desktop', 'mobile', 'server')"
                    },
                    "platform": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Platform",
                        "description": "Platform/OS (e.g., 'macOS', 'Windows', 'Linux')"
                    }
                },
                "type": "object",
                "required": [
                    "client_id"
                ],
                "title": "Body_device_authorization_oauth_device_code_post"
            },
            "Body_generate_device_api_key_oauth_device_api_key_post": {
                "properties": {
                    "user_code": {
                        "type": "string",
                        "title": "User Code",
                        "description": "User code from device registration"
                    }
                },
                "type": "object",
                "required": [
                    "user_code"
                ],
                "title": "Body_generate_device_api_key_oauth_device_api_key_post"
            },
            "Body_introspect_token_oauth_introspect_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token",
                        "description": "Token to introspect"
                    },
                    "token_type_hint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Type Hint",
                        "description": "Token type hint"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id",
                        "description": "OAuth client ID"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret",
                        "description": "Client secret"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "client_id"
                ],
                "title": "Body_introspect_token_oauth_introspect_post"
            },
            "Body_revoke_token_oauth_revoke_post": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token",
                        "description": "Token to revoke"
                    },
                    "token_type_hint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Type Hint",
                        "description": "Token type hint"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id",
                        "description": "OAuth client ID"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret",
                        "description": "Client secret"
                    }
                },
                "type": "object",
                "required": [
                    "token",
                    "client_id"
                ],
                "title": "Body_revoke_token_oauth_revoke_post"
            },
            "Body_token_endpoint_oauth_token_post": {
                "properties": {
                    "grant_type": {
                        "type": "string",
                        "title": "Grant Type",
                        "description": "Grant type"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code",
                        "description": "Authorization code"
                    },
                    "refresh_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Token",
                        "description": "Refresh token"
                    },
                    "client_id": {
                        "type": "string",
                        "title": "Client Id",
                        "description": "OAuth client ID"
                    },
                    "client_secret": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Client Secret",
                        "description": "Client secret"
                    },
                    "code_verifier": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code Verifier",
                        "description": "PKCE verifier"
                    },
                    "device_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Code",
                        "description": "Device code"
                    },
                    "redirect_uri": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Redirect Uri",
                        "description": "Redirect URI"
                    },
                    "scope": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scope",
                        "description": "Scope for refresh"
                    }
                },
                "type": "object",
                "required": [
                    "grant_type",
                    "client_id"
                ],
                "title": "Body_token_endpoint_oauth_token_post"
            },
            "ChatCompletionRequest": {
                "properties": {
                    "model": {
                        "type": "string",
                        "title": "Model",
                        "description": "ID of the model to use",
                        "default": "gpt-4.1-mini"
                    },
                    "messages": {
                        "items": {
                            "$ref": "#/components/schemas/ChatMessage"
                        },
                        "type": "array",
                        "title": "Messages",
                        "description": "List of messages in the conversation"
                    },
                    "frequency_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2.0,
                                "minimum": -2.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Frequency Penalty",
                        "default": 0
                    },
                    "logit_bias": {
                        "anyOf": [
                            {
                                "additionalProperties": {
                                    "type": "number"
                                },
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logit Bias"
                    },
                    "logprobs": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Logprobs",
                        "default": false
                    },
                    "top_logprobs": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 20.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top Logprobs"
                    },
                    "max_tokens": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Tokens"
                    },
                    "n": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 128.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "N",
                        "default": 1
                    },
                    "presence_penalty": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2.0,
                                "minimum": -2.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Presence Penalty",
                        "default": 0
                    },
                    "response_format": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Response Format"
                    },
                    "seed": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Seed"
                    },
                    "stop": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop"
                    },
                    "stream": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stream",
                        "description": "Whether to stream the response",
                        "default": true
                    },
                    "temperature": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 2.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Temperature",
                        "default": 0.7
                    },
                    "top_p": {
                        "anyOf": [
                            {
                                "type": "number",
                                "maximum": 1.0,
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Top P",
                        "default": 1
                    },
                    "tools": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ToolDefinition"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tools"
                    },
                    "tool_choice": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Choice"
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User"
                    },
                    "functions": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/FunctionDefinition"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Functions"
                    },
                    "function_call": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Function Call"
                    }
                },
                "additionalProperties": true,
                "type": "object",
                "required": [
                    "messages"
                ],
                "title": "ChatCompletionRequest",
                "description": "OpenAI-compatible chat completion request."
            },
            "ChatMessage": {
                "properties": {
                    "role": {
                        "type": "string",
                        "enum": [
                            "system",
                            "user",
                            "assistant",
                            "tool",
                            "function"
                        ],
                        "title": "Role"
                    },
                    "content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "tool_calls": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Calls"
                    },
                    "tool_call_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tool Call Id"
                    },
                    "function_call": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Function Call"
                    }
                },
                "type": "object",
                "required": [
                    "role"
                ],
                "title": "ChatMessage",
                "description": "A single message in a chat conversation."
            },
            "CredentialRequest": {
                "properties": {
                    "session_id": {
                        "type": "string",
                        "title": "Session Id"
                    },
                    "bucket_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bucket Name"
                    }
                },
                "type": "object",
                "required": [
                    "session_id"
                ],
                "title": "CredentialRequest",
                "description": "Credential derivation request."
            },
            "CredentialSession": {
                "properties": {
                    "session_id": {
                        "type": "string",
                        "title": "Session Id"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id"
                    },
                    "device_id": {
                        "type": "string",
                        "title": "Device Id"
                    },
                    "purpose": {
                        "type": "string",
                        "title": "Purpose",
                        "default": "s3"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "expires_at": {
                        "type": "string",
                        "title": "Expires At"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "default": "active"
                    },
                    "revoked_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Revoked At"
                    }
                },
                "type": "object",
                "required": [
                    "session_id",
                    "tenant_id",
                    "device_id",
                    "created_at",
                    "expires_at"
                ],
                "title": "CredentialSession",
                "description": "Credential derivation session"
            },
            "DeviceCodeResponse": {
                "properties": {
                    "device_code": {
                        "type": "string",
                        "title": "Device Code"
                    },
                    "user_code": {
                        "type": "string",
                        "title": "User Code"
                    },
                    "verification_uri": {
                        "type": "string",
                        "maxLength": 2083,
                        "minLength": 1,
                        "format": "uri",
                        "title": "Verification Uri"
                    },
                    "verification_uri_complete": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2083,
                                "minLength": 1,
                                "format": "uri"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Verification Uri Complete"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In"
                    },
                    "interval": {
                        "type": "integer",
                        "title": "Interval",
                        "default": 5
                    },
                    "qr_data": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Data"
                    }
                },
                "type": "object",
                "required": [
                    "device_code",
                    "user_code",
                    "verification_uri",
                    "expires_in"
                ],
                "title": "DeviceCodeResponse",
                "description": "Device Authorization Response"
            },
            "DeviceInfo": {
                "properties": {
                    "device_id": {
                        "type": "string",
                        "title": "Device Id"
                    },
                    "device_name": {
                        "type": "string",
                        "title": "Device Name"
                    },
                    "device_type": {
                        "type": "string",
                        "title": "Device Type",
                        "description": "ios, android, desktop, web"
                    },
                    "last_active": {
                        "type": "string",
                        "title": "Last Active"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    },
                    "ip_address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ip Address"
                    },
                    "user_agent": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Agent"
                    },
                    "permissions": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Permissions"
                    }
                },
                "type": "object",
                "required": [
                    "device_id",
                    "device_name",
                    "device_type",
                    "last_active",
                    "created_at"
                ],
                "title": "DeviceInfo",
                "description": "Device information"
            },
            "EmailVerificationRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "signature": {
                        "type": "string",
                        "title": "Signature",
                        "description": "Ed25519 signature"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "signature"
                ],
                "title": "EmailVerificationRequest",
                "description": "Add email to account request"
            },
            "EntityData": {
                "properties": {
                    "entity_id": {
                        "type": "string",
                        "title": "Entity Id"
                    },
                    "schema": {
                        "type": "string",
                        "title": "Schema"
                    },
                    "data": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Data"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "entity_id",
                    "schema",
                    "data"
                ],
                "title": "EntityData",
                "description": "Entity data response."
            },
            "EntityRequest": {
                "properties": {
                    "schema": {
                        "type": "string",
                        "title": "Schema",
                        "description": "Entity schema type (e.g., 'person', 'document')"
                    },
                    "data": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Data",
                        "description": "Entity data"
                    },
                    "generate_embeddings": {
                        "type": "boolean",
                        "title": "Generate Embeddings",
                        "description": "Whether to generate embeddings",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "schema",
                    "data"
                ],
                "title": "EntityRequest",
                "description": "Request to create/update an entity."
            },
            "EntityResponse": {
                "properties": {
                    "entity_id": {
                        "type": "string",
                        "title": "Entity Id"
                    },
                    "schema": {
                        "type": "string",
                        "title": "Schema"
                    },
                    "version": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Version"
                    },
                    "created_at": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Created At"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message",
                        "default": "Entity stored successfully"
                    }
                },
                "type": "object",
                "required": [
                    "entity_id",
                    "schema"
                ],
                "title": "EntityResponse",
                "description": "Response after creating/updating an entity."
            },
            "FunctionDefinition": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "parameters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "FunctionDefinition",
                "description": "Function definition for function calling."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthStatus": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Health status: healthy, degraded, unhealthy"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version",
                        "description": "Service version"
                    },
                    "services": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Services",
                        "description": "Status of dependent services"
                    },
                    "metrics": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metrics",
                        "description": "Optional performance metrics"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "version"
                ],
                "title": "HealthStatus",
                "description": "Service health status."
            },
            "HybridQueryRequest": {
                "properties": {
                    "base_sql": {
                        "type": "string",
                        "title": "Base Sql",
                        "description": "Base SQL query for DataFusion"
                    },
                    "vector_query": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Vector Query",
                        "description": "Optional vector search SQL"
                    },
                    "vector_params": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Vector Params",
                        "description": "Vector search parameters"
                    }
                },
                "type": "object",
                "required": [
                    "base_sql"
                ],
                "title": "HybridQueryRequest",
                "description": "Request for hybrid query (KV + SQL + Vector)"
            },
            "KVBulkRequest": {
                "properties": {
                    "operations": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Operations",
                        "description": "List of operations to perform"
                    },
                    "atomic": {
                        "type": "boolean",
                        "title": "Atomic",
                        "description": "Whether operations should be atomic",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "operations"
                ],
                "title": "KVBulkRequest",
                "description": "Request for bulk KV operations."
            },
            "KVBulkResponse": {
                "properties": {
                    "results": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Results",
                        "description": "Results for each operation"
                    },
                    "success_count": {
                        "type": "integer",
                        "title": "Success Count",
                        "description": "Number of successful operations"
                    },
                    "error_count": {
                        "type": "integer",
                        "title": "Error Count",
                        "description": "Number of failed operations"
                    },
                    "partial": {
                        "type": "boolean",
                        "title": "Partial",
                        "description": "Whether some operations failed"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "success_count",
                    "error_count",
                    "partial"
                ],
                "title": "KVBulkResponse",
                "description": "Response for bulk KV operations."
            },
            "KVData": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key",
                        "description": "The stored key"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "Version number"
                    },
                    "size_bytes": {
                        "type": "integer",
                        "title": "Size Bytes",
                        "description": "Size of stored value"
                    },
                    "encrypted": {
                        "type": "boolean",
                        "title": "Encrypted",
                        "description": "Whether value is encrypted"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At",
                        "description": "Expiration timestamp if TTL was set"
                    },
                    "value": {
                        "title": "Value",
                        "description": "The stored value"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Associated metadata"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Associated tags"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "version",
                    "size_bytes",
                    "encrypted",
                    "value"
                ],
                "title": "KVData",
                "description": "Extended KV response with actual data."
            },
            "KVListResponse": {
                "properties": {
                    "keys": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Keys",
                        "description": "List of key metadata"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total",
                        "description": "Total number of keys"
                    },
                    "has_more": {
                        "type": "boolean",
                        "title": "Has More",
                        "description": "Whether more results exist"
                    },
                    "cursor": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cursor",
                        "description": "Cursor for pagination"
                    }
                },
                "type": "object",
                "required": [
                    "keys",
                    "total",
                    "has_more"
                ],
                "title": "KVListResponse",
                "description": "Response for listing KV pairs."
            },
            "KVRequest": {
                "properties": {
                    "value": {
                        "title": "Value",
                        "description": "Value to store (JSON-serializable)"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Optional metadata"
                    },
                    "ttl": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ttl",
                        "description": "Time-to-live in seconds"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorization"
                    },
                    "encrypt": {
                        "type": "boolean",
                        "title": "Encrypt",
                        "description": "Whether to encrypt the value",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "value"
                ],
                "title": "KVRequest",
                "description": "Request model for KV operations."
            },
            "KVResponse": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key",
                        "description": "The stored key"
                    },
                    "version": {
                        "type": "integer",
                        "title": "Version",
                        "description": "Version number"
                    },
                    "size_bytes": {
                        "type": "integer",
                        "title": "Size Bytes",
                        "description": "Size of stored value"
                    },
                    "encrypted": {
                        "type": "boolean",
                        "title": "Encrypted",
                        "description": "Whether value is encrypted"
                    },
                    "expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires At",
                        "description": "Expiration timestamp if TTL was set"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "version",
                    "size_bytes",
                    "encrypted"
                ],
                "title": "KVResponse",
                "description": "Response model for KV operations."
            },
            "LoginEvent": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Updated At"
                    },
                    "event_id": {
                        "type": "string",
                        "title": "Event Id",
                        "description": "Unique event identifier"
                    },
                    "tenant_id": {
                        "type": "string",
                        "title": "Tenant Id",
                        "description": "Tenant identifier"
                    },
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Id",
                        "description": "User identifier"
                    },
                    "device_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Id",
                        "description": "Device identifier"
                    },
                    "device_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Device Type",
                        "description": "mobile, desktop, web, api"
                    },
                    "auth_method": {
                        "type": "string",
                        "title": "Auth Method",
                        "description": "Authentication method used"
                    },
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether login was successful"
                    },
                    "ip_address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Ip Address",
                        "description": "Client IP address"
                    },
                    "user_agent": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "User Agent",
                        "description": "Client user agent"
                    },
                    "token_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Token Type",
                        "description": "Type of token issued"
                    },
                    "scope": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scope",
                        "description": "Token scope"
                    },
                    "error_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Code",
                        "description": "Error code if failed"
                    },
                    "error_message": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error Message",
                        "description": "Error message if failed"
                    },
                    "session_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Id",
                        "description": "Session identifier"
                    },
                    "expires_in": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires In",
                        "description": "Token expiration in seconds"
                    },
                    "headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Headers",
                        "description": "Request headers"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Additional event data"
                    }
                },
                "type": "object",
                "required": [
                    "event_id",
                    "tenant_id",
                    "auth_method",
                    "success"
                ],
                "title": "LoginEvent",
                "description": "Login event for tracking authentication activities"
            },
            "QRCodeData": {
                "properties": {
                    "session_id": {
                        "type": "string",
                        "title": "Session Id"
                    },
                    "public_key": {
                        "type": "string",
                        "title": "Public Key"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In"
                    }
                },
                "type": "object",
                "required": [
                    "session_id",
                    "public_key",
                    "expires_in"
                ],
                "title": "QRCodeData",
                "description": "QR code data for device pairing"
            },
            "QRScanRequest": {
                "properties": {
                    "session_id": {
                        "type": "string",
                        "title": "Session Id"
                    },
                    "mobile_public_key": {
                        "type": "string",
                        "title": "Mobile Public Key"
                    }
                },
                "type": "object",
                "required": [
                    "session_id",
                    "mobile_public_key"
                ],
                "title": "QRScanRequest",
                "description": "QR scan request from mobile."
            },
            "QRSessionRequest": {
                "properties": {
                    "client_id": {
                        "type": "string",
                        "title": "Client Id"
                    },
                    "device_info": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Device Info"
                    }
                },
                "type": "object",
                "required": [
                    "client_id",
                    "device_info"
                ],
                "title": "QRSessionRequest",
                "description": "QR session creation request."
            },
            "QueryResultResponse": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query"
                    },
                    "rows": {
                        "type": "integer",
                        "title": "Rows"
                    },
                    "columns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Columns"
                    },
                    "data": {
                        "items": {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Data"
                    },
                    "execution_time_ms": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Execution Time Ms"
                    },
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "default": "json"
                    }
                },
                "type": "object",
                "required": [
                    "query",
                    "rows",
                    "columns",
                    "data"
                ],
                "title": "QueryResultResponse",
                "description": "Response from SQL query execution"
            },
            "RegisterRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "public_key": {
                        "type": "string",
                        "title": "Public Key",
                        "description": "Base64 encoded Ed25519 public key"
                    },
                    "device_info": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Device Info",
                        "description": "Device metadata"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "public_key",
                    "device_info"
                ],
                "title": "RegisterRequest",
                "description": "Mobile device registration request"
            },
            "S3Credentials": {
                "properties": {
                    "access_key_id": {
                        "type": "string",
                        "title": "Access Key Id"
                    },
                    "secret_access_key": {
                        "type": "string",
                        "title": "Secret Access Key"
                    },
                    "session_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Token"
                    },
                    "region": {
                        "type": "string",
                        "title": "Region",
                        "default": "us-east-1"
                    },
                    "endpoint": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endpoint"
                    },
                    "bucket_name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bucket Name"
                    }
                },
                "type": "object",
                "required": [
                    "access_key_id",
                    "secret_access_key"
                ],
                "title": "S3Credentials",
                "description": "S3 credentials derived using HKDF"
            },
            "S3ValidationRequest": {
                "properties": {
                    "access_key": {
                        "type": "string",
                        "title": "Access Key"
                    },
                    "signature": {
                        "type": "string",
                        "title": "Signature"
                    },
                    "string_to_sign": {
                        "type": "string",
                        "title": "String To Sign"
                    },
                    "request_method": {
                        "type": "string",
                        "title": "Request Method"
                    },
                    "request_uri": {
                        "type": "string",
                        "title": "Request Uri"
                    },
                    "request_headers": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Request Headers"
                    }
                },
                "type": "object",
                "required": [
                    "access_key",
                    "signature",
                    "string_to_sign",
                    "request_method",
                    "request_uri",
                    "request_headers"
                ],
                "title": "S3ValidationRequest",
                "description": "S3 validation request from SeaweedFS"
            },
            "S3ValidationResponse": {
                "properties": {
                    "valid": {
                        "type": "boolean",
                        "title": "Valid"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tenant Id"
                    },
                    "bucket_prefix": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Bucket Prefix"
                    },
                    "permissions": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Permissions"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error"
                    }
                },
                "type": "object",
                "required": [
                    "valid"
                ],
                "title": "S3ValidationResponse",
                "description": "S3 validation response to SeaweedFS"
            },
            "SQLQueryRequest": {
                "properties": {
                    "sql": {
                        "type": "string",
                        "title": "Sql",
                        "description": "SQL query to execute"
                    },
                    "format": {
                        "type": "string",
                        "title": "Format",
                        "description": "Response format: json, csv, parquet",
                        "default": "json"
                    },
                    "limit": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 10000.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Limit",
                        "description": "Result limit override"
                    }
                },
                "type": "object",
                "required": [
                    "sql"
                ],
                "title": "SQLQueryRequest",
                "description": "Request to execute SQL query"
            },
            "SearchEntitiesRequest": {
                "properties": {
                    "query": {
                        "type": "string",
                        "title": "Query",
                        "description": "Search query"
                    },
                    "filters": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Filters",
                        "description": "Filter criteria"
                    },
                    "limit": {
                        "type": "integer",
                        "maximum": 100.0,
                        "minimum": 1.0,
                        "title": "Limit",
                        "description": "Maximum results",
                        "default": 10
                    }
                },
                "type": "object",
                "required": [
                    "query"
                ],
                "title": "SearchEntitiesRequest",
                "description": "Request to search entities."
            },
            "SeaweedFSConfig": {
                "properties": {
                    "host": {
                        "type": "string",
                        "title": "Host",
                        "default": "localhost"
                    },
                    "port": {
                        "type": "integer",
                        "title": "Port",
                        "default": 8080
                    },
                    "timeout": {
                        "type": "integer",
                        "title": "Timeout",
                        "default": 30
                    },
                    "max_retries": {
                        "type": "integer",
                        "title": "Max Retries",
                        "default": 3
                    },
                    "ssl_enabled": {
                        "type": "boolean",
                        "title": "Ssl Enabled",
                        "default": false
                    },
                    "master_port": {
                        "type": "integer",
                        "title": "Master Port",
                        "default": 9333
                    },
                    "filer_port": {
                        "type": "integer",
                        "title": "Filer Port",
                        "default": 8888
                    },
                    "s3_port": {
                        "type": "integer",
                        "title": "S3 Port",
                        "default": 8333
                    },
                    "volume_port": {
                        "type": "integer",
                        "title": "Volume Port",
                        "default": 8080
                    }
                },
                "type": "object",
                "title": "SeaweedFSConfig",
                "description": "SeaweedFS service configuration."
            },
            "SeaweedFSEvent": {
                "properties": {
                    "event_type": {
                        "type": "string",
                        "title": "Event Type"
                    },
                    "file_path": {
                        "type": "string",
                        "title": "File Path"
                    },
                    "bucket": {
                        "type": "string",
                        "title": "Bucket"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "timestamp": {
                        "type": "string",
                        "title": "Timestamp"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "default": {}
                    }
                },
                "type": "object",
                "required": [
                    "event_type",
                    "file_path",
                    "bucket",
                    "size",
                    "timestamp"
                ],
                "title": "SeaweedFSEvent",
                "description": "SeaweedFS file event notification"
            },
            "SessionRequest": {
                "properties": {
                    "device_id": {
                        "type": "string",
                        "title": "Device Id"
                    },
                    "purpose": {
                        "type": "string",
                        "title": "Purpose",
                        "default": "s3"
                    }
                },
                "type": "object",
                "required": [
                    "device_id"
                ],
                "title": "SessionRequest",
                "description": "Credential session creation request."
            },
            "TUSFileInfo": {
                "properties": {
                    "upload_id": {
                        "type": "string",
                        "title": "Upload Id",
                        "description": "Unique upload identifier"
                    },
                    "upload_offset": {
                        "type": "integer",
                        "title": "Upload Offset",
                        "description": "Current byte offset"
                    },
                    "upload_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Upload Length",
                        "description": "Total upload size in bytes"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Upload metadata"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Upload status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Upload creation time"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expires At",
                        "description": "Upload expiration time"
                    }
                },
                "type": "object",
                "required": [
                    "upload_id",
                    "upload_offset",
                    "status",
                    "created_at",
                    "expires_at"
                ],
                "title": "TUSFileInfo",
                "description": "TUS file information."
            },
            "TUSResponse": {
                "properties": {
                    "upload_id": {
                        "type": "string",
                        "title": "Upload Id",
                        "description": "Unique upload identifier"
                    },
                    "upload_url": {
                        "type": "string",
                        "title": "Upload Url",
                        "description": "URL for upload operations"
                    },
                    "upload_offset": {
                        "type": "integer",
                        "title": "Upload Offset",
                        "description": "Current byte offset"
                    },
                    "upload_length": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Upload Length",
                        "description": "Total upload size in bytes"
                    },
                    "metadata": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Metadata",
                        "description": "Upload metadata"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Upload status"
                    }
                },
                "type": "object",
                "required": [
                    "upload_id",
                    "upload_url",
                    "upload_offset",
                    "status"
                ],
                "title": "TUSResponse",
                "description": "TUS operation response."
            },
            "TiKVBatchOperation": {
                "properties": {
                    "operation": {
                        "type": "string",
                        "title": "Operation",
                        "description": "Operation type: get, put, delete"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key",
                        "description": "Key for the operation"
                    },
                    "value": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Value",
                        "description": "Value for put operations"
                    }
                },
                "type": "object",
                "required": [
                    "operation",
                    "key"
                ],
                "title": "TiKVBatchOperation",
                "description": "Single operation in a batch request"
            },
            "TiKVBatchRequest": {
                "properties": {
                    "operations": {
                        "items": {
                            "$ref": "#/components/schemas/TiKVBatchOperation"
                        },
                        "type": "array",
                        "title": "Operations",
                        "description": "List of operations to perform"
                    }
                },
                "type": "object",
                "required": [
                    "operations"
                ],
                "title": "TiKVBatchRequest",
                "description": "Request model for TiKV batch operations"
            },
            "TiKVPutRequest": {
                "properties": {
                    "value": {
                        "additionalProperties": true,
                        "type": "object",
                        "title": "Value",
                        "description": "JSON value to store"
                    }
                },
                "type": "object",
                "required": [
                    "value"
                ],
                "title": "TiKVPutRequest",
                "description": "Request model for TiKV PUT operations"
            },
            "TiKVResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "title": "Success",
                        "description": "Whether operation succeeded"
                    },
                    "data": {
                        "anyOf": [
                            {},
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data",
                        "description": "Response data"
                    },
                    "error": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Error",
                        "description": "Error message if failed"
                    }
                },
                "type": "object",
                "required": [
                    "success"
                ],
                "title": "TiKVResponse",
                "description": "Standard TiKV operation response"
            },
            "TiKVScanRequest": {
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "Prefix",
                        "description": "Key prefix to scan",
                        "default": ""
                    },
                    "limit": {
                        "type": "integer",
                        "maximum": 10000.0,
                        "minimum": 1.0,
                        "title": "Limit",
                        "description": "Maximum number of results",
                        "default": 100
                    }
                },
                "type": "object",
                "title": "TiKVScanRequest",
                "description": "Request model for TiKV SCAN operations"
            },
            "TokenResponse": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type",
                        "default": "Bearer"
                    },
                    "expires_in": {
                        "type": "integer",
                        "title": "Expires In"
                    },
                    "refresh_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Refresh Token"
                    },
                    "scope": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Scope"
                    },
                    "id_token": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Id Token"
                    },
                    "tenant_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tenant Id"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "expires_in"
                ],
                "title": "TokenResponse",
                "description": "OAuth 2.1 Token Response"
            },
            "ToolDefinition": {
                "properties": {
                    "type": {
                        "type": "string",
                        "const": "function",
                        "title": "Type"
                    },
                    "function": {
                        "$ref": "#/components/schemas/FunctionDefinition"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "function"
                ],
                "title": "ToolDefinition",
                "description": "Tool definition for tool use."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "ValidationRequest": {
                "properties": {
                    "access_key_id": {
                        "type": "string",
                        "title": "Access Key Id"
                    },
                    "secret_access_key": {
                        "type": "string",
                        "title": "Secret Access Key"
                    }
                },
                "type": "object",
                "required": [
                    "access_key_id",
                    "secret_access_key"
                ],
                "title": "ValidationRequest",
                "description": "Credential validation request."
            },
            "VerifyRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "code": {
                        "type": "string",
                        "pattern": "^[0-9]{6}$",
                        "title": "Code",
                        "description": "6-digit verification code"
                    },
                    "challenge": {
                        "type": "string",
                        "title": "Challenge",
                        "description": "Challenge to sign"
                    },
                    "signature": {
                        "type": "string",
                        "title": "Signature",
                        "description": "Base64 encoded Ed25519 signature"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "code",
                    "challenge",
                    "signature"
                ],
                "title": "VerifyRequest",
                "description": "Email verification request"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            },
            "Admin Bearer Token": {
                "type": "http",
                "description": "Admin bearer token for development and admin endpoints",
                "scheme": "bearer"
            }
        }
    }
}
